/*
 * LMF Location
 *
 * LMF Location Service. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * API version: 1.2.0-alpha.4
 * Generated by: OpenAPI Generator (https://model-generator.tech)
 */

package model

import (
	"time"
)

// LocationData - Information within Determine Location Response.
type LocationData struct {

	LocationEstimate GeographicArea `json:"locationEstimate"`

	AccuracyFulfilmentIndicator AccuracyFulfilmentIndicator `json:"accuracyFulfilmentIndicator,omitempty"`

	// Indicates value of the age of the location estimate.
	AgeOfLocationEstimate int32 `json:"ageOfLocationEstimate,omitempty"`

	// string with format 'date-time' as defined in OpenAPI.
	TimestampOfLocationEstimate time.Time `json:"timestampOfLocationEstimate,omitempty"`

	VelocityEstimate VelocityEstimate `json:"velocityEstimate,omitempty"`

	CivicAddress CivicAddress `json:"civicAddress,omitempty"`

	LocalLocationEstimate LocalArea `json:"localLocationEstimate,omitempty"`

	PositioningDataList []PositioningMethodAndUsage `json:"positioningDataList,omitempty"`

	GnssPositioningDataList []GnssPositioningMethodAndUsage `json:"gnssPositioningDataList,omitempty"`

	Ecgi Ecgi `json:"ecgi,omitempty"`

	Ncgi Ncgi `json:"ncgi,omitempty"`

	// Indicates value of altitude.
	Altitude float64 `json:"altitude,omitempty"`

	// Specifies the measured uncompensated atmospheric pressure.
	BarometricPressure int32 `json:"barometricPressure,omitempty"`

	// LMF identification.
	ServingLMFIdentification string `json:"servingLMFIdentification,omitempty"`

	// Positioning capabilities supported by the UE. A string encoding the \"ProvideCapabilities-r9-IEs\" IE as specified in clause 6.3 of 3GPP TS 37.355 (start from octet 1).
	UePositioningCap string `json:"uePositioningCap,omitempty"`

	UeAreaInd UeAreaIndication `json:"ueAreaInd,omitempty"`

	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures string `json:"supportedFeatures,omitempty"`

	AchievedQos MinorLocationQoS `json:"achievedQos,omitempty"`
}
