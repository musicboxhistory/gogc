/*
 * 5G-EIR Equipment Identity Check
 *
 * 5G-EIR Equipment Identity Check Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 1.2.0-alpha.2
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package handler

import (
	"gogc/src/5geir/EquipmentIdentityCheck/scenario"
	"gogc/src/common/logger"
	"gogc/src/model"
	"net/http"

	"github.com/gin-gonic/gin"
)

// GetEquipmentStatus - Retrieves the status of the UE
func GetEquipmentStatus(c *gin.Context) {

	logger.Snap("GetEquipmentStatus START")
	defer logger.Snap("GetEquipmentStatus END")

	// Variable Declaration
	input := scenario.EquipmentStatus{}

	// Get Query Parameter
	input.Pei = c.Query("pei")
	input.Supi = c.Query("supi")
	input.Gpsi = c.Query("gpsi")
	logger.Snap("input:%#+v", input)

	// Check Mandatory Parameter
	if input.Pei == "" {
		status := http.StatusBadRequest
		detail := scenario.ErrorDetailMandatoryIeIncorrect
		cause := scenario.MandatoryIeIncorrect
		output := model.ProblemDetails{Status: &status, Detail: &detail, Cause: &cause}
		c.JSON(http.StatusBadRequest, output)
		return
	}

	// Call Scenario Function
	output, err := scenario.GetEquipmentStatus(input)
	logger.Snap("output:%#+v, err:%v", output, err)

	if err == nil {
		c.JSON(http.StatusOK, output)
	} else {
		c.JSON(http.StatusNotFound, output)
	}
}
