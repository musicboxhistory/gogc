/*
 * Nudr_DataRepository API OpenAPI file
 *
 * Unified Data Repository Service. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * API version: 2.2.0-alpha.7
 * Generated by: OpenAPI Generator (https://handler-generator.tech)
 */

package handler

import (
	"gogc/src/common/logger"
	"gogc/src/model"
	"gogc/src/udr/DataRepository/scenario"
	"net/http"

	"github.com/gin-gonic/gin"
)

// AmfContext3gpp - To modify the AMF context data of a UE using 3gpp access in the UDR
func AmfContext3gpp(c *gin.Context) {

	logger.Debug("AmfContext3gpp START")
	defer logger.Debug("AmfContext3gpp END")

	// Get Parameter
	request := model.Request{}
	request.Params = map[string]string{}
	request.Query = c.Request.URL.Query()
	request.Params["ueId"] = c.Param("ueId")
	logger.Debug("request:%#+v", request)

	// Call Scenario Function
	response, err := scenario.AmfContext3gpp(request)
	logger.Debug("response:%#+v, err:%v", response, err)

	if err == nil {
		c.JSON(http.StatusOK, response)
	} else {
		c.JSON(http.StatusNotFound, response)
	}
}

// CreateAmfContext3gpp - To store the AMF context data of a UE using 3gpp access in the UDR
func CreateAmfContext3gpp(c *gin.Context) {

	logger.Debug("CreateAmfContext3gpp START")
	defer logger.Debug("CreateAmfContext3gpp END")

	// Get Parameter
	request := model.Request{}
	request.Params = map[string]string{}
	request.Query = c.Request.URL.Query()
	request.Params["ueId"] = c.Param("ueId")
	logger.Debug("request:%#+v", request)

	// Get Json Request
	jsonData := model.Amf3GppAccessRegistration{}
	err := c.ShouldBindJSON(&jsonData)
	if err != nil {
		// Set Error Details
		logger.Error("err:%v", err)
		status := http.StatusNotFound
		detail := scenario.ErrorDetailUserNotFoud
		cause := scenario.UserNotFoud
		problemDetail := model.ProblemDetails{Status: &status, Detail: &detail, Cause: &cause}
		c.JSON(http.StatusBadRequest, problemDetail)
		return
	}

	// Call Scenario Function
	response, err := scenario.CreateAmfContext3gpp(request, &jsonData)

	if err == nil {
		c.JSON(http.StatusOK, &jsonData)
	} else {
		c.JSON(http.StatusNotFound, response)
	}
}

// QueryAmfContext3gpp - Retrieves the AMF context data of a UE using 3gpp access
func QueryAmfContext3gpp(c *gin.Context) {

	logger.Debug("QueryAmfContext3gpp START")
	defer logger.Debug("QueryAmfContext3gpp END")

	// Get Parameter
	request := model.Request{}
	request.Params = map[string]string{}
	request.Query = c.Request.URL.Query()
	request.Params["ueId"] = c.Param("ueId")
	logger.Debug("request:%#+v", request)

	// Call Scenario Function
	response, err := scenario.QueryAmfContext3gpp(request)
	logger.Debug("response:%#+v, err:%v", response, err)

	if err == nil {
		c.JSON(http.StatusOK, response)
	} else {
		c.JSON(http.StatusNotFound, response)
	}
}
